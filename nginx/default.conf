# upstream front-end {
#     server front-end:5173;
# }

# upstream back-end {
#     server back-end:3000;
# }
# server {
#     listen 80;
#     location / {
#         proxy_pass http://front-end;
#     }
#     location /sockjs-node {
#         proxy_pass http://front-end;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#     }
#     location /api {
#     # rewrite /back-end/(.*) /$1 break;
#     proxy_pass http://back-end;
#     }
# }

# client_max_body_size 20M;

upstream front-end {
    server front-end:5173;
}

upstream back-end {
    server back-end:3000;
}

# Przekierowanie HTTP na HTTPS
server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

# Konfiguracja HTTPS
server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;

    # Optymalizacja SSL
    add_header 'Access-Control-Allow-Origin' 'https://localhost' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;

    if ($request_method = 'OPTIONS') {
        return 204;
    }


    location / {
        proxy_pass http://front-end;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    location /sockjs-node {
        proxy_pass http://front-end;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api {
        proxy_pass http://back-end;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    client_max_body_size 20M;
}